name: build

# This action works with pull requests and pushes
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [msrv, stable, beta, nightly]
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
        config: ["termion", "crossterm", "console", "default", "all"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}

      - name: Define Rust version
        run: |
          if [ "${{ matrix.build }}" = "msrv" ]; then
            RUST_VERSION=1.58.1
          else
            RUST_VERSION=${{ matrix.rust }}
          fi

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            ./target
            ./test-target
          key: ${{ runner.os }}-cargo-files-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-files-

      - name: Define features
        run: |
          if [ "${{ matrix.config }}" = "termion" ]; then
            FEATURES="--no-default-features --features=termion"
          elif [ "${{ matrix.config }}" = "crossterm" ]; then
            FEATURES="--no-default-features --features=crossterm"
          elif [ "${{ matrix.config }}" = "console" ]; then
            FEATURES="--no-default-features --features=console"
          elif [ "${{ matrix.config }}" = "default" ]; then
            FEATURES=""
          elif [ "${{ matrix.config }}" = "all" ]; then
            FEATURES="--all-features"
          fi

      - name: Test
        run: cargo test --verbose ${{ env.FEATURES }}

      - name: Check format
        run: cargo fmt --check

      - name: Check lint
        run: cargo clippy -- -D warnings
